---
# sanbi specific, needs to run before Galaxy install
- hosts: sanbiservers
  pre_tasks:
    - name: Set hostname to FQDN
      hostname:
        name: "{{ inventory_hostname }}"
  become: true 
  roles:
    - role: sanbi-sa.common
      tags: "sanbi-common"
    - role: sanbi-sa.munge
      tags: "sanbi-munge"
    - role: sanbi-sa.cephfs-client
      tags: "sanbi-cephfs-client"

# ilifu specific, should run before Galaxy
- hosts: slurmservers
  become: true
  roles:
    - galaxyproject.repos
    - galaxyproject.slurm
  

- hosts: galaxyservers
  pre_tasks:
    - name: Install Dependencies
      package:
        name: ['git', 'make', 'python3-psycopg2', 'python3-virtualenv', 'mercurial', 'python3-pip']
      become: true
    - name: Create upload galaxy upload dir
      file:
        path: /projects/galaxy/pvh_masters_galaxy1_upload
        owner: "{{ galaxy_user.name }}"
        group: "{{ galaxy_user.name }}"
        mode: 0755
        state: directory
      when: inventory_hostname == 'galaxy-masters2.sanbi.ac.za'
      become: true
  handlers:
    - name: Restart Galaxy
      systemd:
        name: galaxy
        state: restarted
      become: true
  roles:
    - role: galaxyproject.postgresql
      become: true
    - role: natefoo.postgresql_objects
      become: true
      become_user: postgres
    - geerlingguy.pip
    - role: galaxyproject.galaxy
      tags: "galaxy"
    - role: usegalaxy-eu.galaxy-systemd
      tags: "galaxy-systemd"
    - role: uchida.miniconda
      become: true
      become_user: "{{ galaxy_user.name }}"
      tags: "conda"
    - role: galaxyproject.nginx
      tags: "nginx"
      become: true
    - role: usegalaxy_eu.gxadmin
      tags: gxadmin
      become: true
    - role: pvanheus.galaxy_cleanup
      tags: galaxy_cleanup
      become: true

    # disabled on advice from natefoo
    # - role: galaxyproject.galaxy-tools
    #   tags: "galaxy_tools"

# this is not working at the moment, but the idea is to export the galaxy_user,
# galaxy_server_dir and galaxy_mutable_data_dir variables from the
# galaxy role and then run this on one of the cluster worker nodes to create
# the virtualenv for Galaxy's metadata setting script.
# - hosts: clusterworkers
#   become: true
#   become_user: "{{ galaxy_user.name }}"
#   tasks:
#     - name: create virtualenv on cluster worker
#       shell: scripts/common_startup.sh --skip-client-build --skip-samples
#       args:
#         chdir: "{{ galaxy_server_dir }}"
#         environment:
#           GALAXY_VIRTUAL_ENV: "{{ galaxy_mutable_data_dir }}/cluster_venv" 