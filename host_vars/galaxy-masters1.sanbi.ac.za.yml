galaxy_config:
  galaxy:
    brand: "Masters Galaxy1"
    admin_users: pvh@sanbi.ac.za
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    check_migrate_tools: false
    tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
    shed_tool_data_dir: "{{ galaxy_mutable_data_dir }}/tool-data"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
    tool_cache_data_dir: "{{ galaxy_mutable_data_dir }}/cache/tool_cache"
    tool_search_index_dir: "{{ galaxy_mutable_data_dir }}/cache/tool_search_index"
    sanitize_whitelist_file: "{{ galaxy_mutable_data_dir }}/config/sanitize_whitelist.txt"
    nginx_x_accel_redirect_base: /_x_accel_redirect
    conda_ensure_channels: pvanheus,iuc,conda-forge,bioconda,defaults
  uwsgi:
    # Default values
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
      - /favicon.ico={{ galaxy_server_dir }}/static/favicon.ico
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2

# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
- "{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

# nginx specific to using certbot
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

# for on-node slurm scheduler
slurm_nodes:
  - name: localhost
    CPUs: 32   
