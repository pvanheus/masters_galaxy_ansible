galaxy_venv_python: 3
pip_virtualenv_command: /usr/bin/python3 -m virtualenv
pip_package: python3-pip                               # geerlingguy.pip

# PostgreSQL
postgresql_objects_users:
  - name: "{{ galaxy_user.name }}"
    password: null
postgresql_objects_databases:
  - name: "{{ galaxy_user.name }}"
    owner: "{{ galaxy_user.name }}"


# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /data/srv/galaxy
galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_22.05
galaxy_config_style: yaml
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: "4.7.12"
miniconda_manage_dependencies: false
galaxy_config_files:
  - src: "files/tool_sheds_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
# Automatically restart Galaxy by calling a handler named 'Restart
# Galaxy', whenever the server changes.
galaxy_restart_handler_name: Restart Galaxy


# systemd
galaxy_manage_systemd: true

# old - uwsgi - systemd
# # SystemD setup
# galaxy_systemd_mode: mule
# galaxy_zergpool_listen_addr: 127.0.0.1:8080

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
nginx_conf_http:
  client_max_body_size: 1g
  uwsgi_read_timeout: 600
nginx_remove_default_vhost: true
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
      
galaxy_tools_tool_list_files: [ "files/masters_tool_list.yml" ]
galaxy_tools_galaxy_instance_url: "https://{{inventory_hostname}}"

# Golang
golang_gopath: '/opt/workspace-go'
# Singularity target version
singularity_version: "3.7.4"
singularity_go_path: "{{ golang_install_dir }}"

# TODO: split this so it works for both gx servers